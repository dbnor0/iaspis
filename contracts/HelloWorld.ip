import "HelloNether.ip";
import "Ownable.ip";

open proxy Market for Primary, Secondary {
    @       *   pub       bytes32 test;
    @ Primary   pvt const string x; 
    @ Primary   pub       uint256[][5][] v;
    @ Secondary pvt       mapping (uint256 => mapping (string => address[][])) m;
}

facet Primary to Market {
    pub $ fn doSomething (address x) => string {
        return expr;
    }
}

facet Secondary to Market {
    pvt ! proc doSomethingElse (string memory a, string memory b) => bool {
        string memory bCopy = expr;
        if (expr) {
            return expr;    
        } else {
            return expr;
        }
        return expr;
    }
}

struct test1 {
    string x;
    address y;
}

enum test2 {
    VALUE1,
    VALUE2
}